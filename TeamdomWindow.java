/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package teamdom;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.StringTokenizer;

/**
 *
 * @author aluebs
 */
public class TeamdomWindow extends javax.swing.JFrame {

    /**
     * Creates new form TeamdomWindow
     */
    public TeamdomWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelPlayers = new javax.swing.JLabel();
        labelTeams = new javax.swing.JLabel();
        comboTeams = new javax.swing.JComboBox();
        buttonTeams = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textTeams = new javax.swing.JTextArea();
        textPlayers = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Teamdom");
        setMaximumSize(new java.awt.Dimension(640, 480));
        setMinimumSize(new java.awt.Dimension(640, 480));
        setName("Teamdom");
        setResizable(false);

        labelPlayers.setText("Players:");

        labelTeams.setText("Number of teams:");

        comboTeams.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4", "5", "6", "7", "8" }));

        buttonTeams.setText("Create Teams");
        buttonTeams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTeamsActionPerformed(evt);
            }
        });

        textTeams.setColumns(20);
        textTeams.setEditable(false);
        textTeams.setRows(5);
        jScrollPane1.setViewportView(textTeams);

        textPlayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPlayersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelPlayers)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textPlayers))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelTeams)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboTeams, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 322, Short.MAX_VALUE)
                        .addComponent(buttonTeams)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPlayers)
                    .addComponent(textPlayers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTeams)
                    .addComponent(comboTeams, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTeams))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonTeamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTeamsActionPerformed
        String playersCsv = textPlayers.getText();
        StringTokenizer st = new StringTokenizer(playersCsv, ",");
        List<String> players = new ArrayList<>();
        while(st.hasMoreTokens()) {
            players.add(st.nextToken());
        }
        List<List<String>> teams = new ArrayList<>();
        int numberTeams = Integer.parseInt((String)comboTeams.getSelectedItem());
        for(int i = 0; i < numberTeams; i++) {
            teams.add(new ArrayList<String>());
        }
        Random random = new Random();
        int team = 0;
        int player;
        while(!players.isEmpty()) {
            player = random.nextInt(players.size());
            teams.get(team).add(players.get(player));
            players.remove(player);
            if((++team) >= numberTeams) {
                team = 0;
            }
        }
        if(team > 0) {
            for(;team < numberTeams;team++) {
                teams.get(team).add("CPU"+(team+1));
            }
        }
        String result = "";
        for(int i = 0; i < numberTeams; i++) {
            result+=("Team "+(i+1)+":"+System.lineSeparator());
            for(int j = 0; j < teams.get(i).size(); j++) {
                result+=("* "+teams.get(i).get(j)+System.lineSeparator());
            }
            result+=System.lineSeparator();
        }
        textTeams.setText(result);
    }//GEN-LAST:event_buttonTeamsActionPerformed

    private void textPlayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPlayersActionPerformed
        buttonTeamsActionPerformed(evt);
    }//GEN-LAST:event_textPlayersActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonTeams;
    private javax.swing.JComboBox comboTeams;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelPlayers;
    private javax.swing.JLabel labelTeams;
    private javax.swing.JTextField textPlayers;
    private javax.swing.JTextArea textTeams;
    // End of variables declaration//GEN-END:variables
}
